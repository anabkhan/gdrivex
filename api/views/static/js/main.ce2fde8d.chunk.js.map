{"version":3,"sources":["firebase.js","constants/REST_URLS.js","services/RestService.js","components/FilesView/FileItem.js","components/FilesView/FilesView.js","media/google-drive-logo.svg","components/header/index.js","services/FileService.js","components/Uploads/index.js","components/sidebar/NewFile.js","components/sidebar/SideBarItem.js","components/sidebar/index.js","components/DrivesView/DriveItem.js","components/DrivesView/DrivesView.js","App.js","reportWebVitals.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","storage","firestore","BASE_URL","UPLOAD_STATUS","get","url","fetch","then","response","json","post","body","method","headers","JSON","stringify","FileItem","id","caption","size","onDeleted","className","InsertDriveFile","fileSizeInBytes","i","Math","max","toFixed","getReadableFileSizeString","href","target","download","style","marginRight","color","onClick","name","alert","setTimeout","catch","err","console","log","cursor","FilesView","useState","files","setFiles","fetchFiles","keys","Object","data","forEach","key","eachFile","file","push","item","useEffect","map","timestamp","index","src","GDriveLogo","alt","type","placeholder","Uploads","open","uploadStatus","setUploadStatus","newTaskUrl","setNewTaskUrl","task","setInterval","statuses","status","window","addEventListener","clearInterval","removeEventListener","onChange","e","value","res","marginLeft","background","downloaded","total","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","boxShadow","shadows","padding","spacing","NewFile","classes","modelStyle","setOpen","Modal","onClose","SideBarItem","arrow","icon","label","DeleteOutline","DriveItem","email","capacity","usedPercentage","border","DrivesView","drives","setDrives","eachDrive","user","emailAddress","storageQuota","usageInGB","totalInGB","parseInt","usage","limit","showAddDriveModal","setShowAddDriveModal","authCode","setAuthCode","handleClose","fontWeight","fontSize","authUrl","display","Add","authCodeUrl","App","setUser","signInWithPopup","result","sessionStorage","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce2fde8d.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAv-an02bKJiAYmclEBnnYrksgvAZnyHrA\",\r\n    authDomain: \"gdrivex-f98fc.firebaseapp.com\",\r\n    projectId: \"gdrivex-f98fc\",\r\n    storageBucket: \"gdrivex-f98fc.appspot.com\",\r\n    messagingSenderId: \"972070014032\",\r\n    appId: \"1:972070014032:web:f5f4b698f57154e0a49555\",\r\n    measurementId: \"G-5Y7C9TME5P\"\r\n  };\r\n  \r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst auth = firebase.auth()\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nconst storage = firebase.storage()\r\nconst db = firebase.firestore()\r\n\r\nexport {auth, provider, db, storage}","export const BASE_URL = \"http://localhost:3001/\"\r\nexport const ADD_DRIVE = \"addDrive\"\r\nexport const SUBMIT_AUTH = \"submitAuthCode\"\r\nexport const LIST_DRIVES = \"listDrives\"\r\nexport const GET_SCHEMA = \"getSchema\"\r\nexport const UPLOAD_FILE = \"uploadFile\"\r\nexport const LIST_FILES = \"listFiles\"\r\nexport const DOWNLOAD_FILE = \"downloadFile\"\r\nexport const DELETE_FILE = \"deleteFile\"\r\nexport const UPLOAD_STATUS = \"getUploadStatus\"\r\nexport const CREATE_UPLOAD_TASK = \"createUploadTask\"","import { BASE_URL } from \"../constants/REST_URLS\"\r\n\r\nexport const get = (url) => {\r\n    return fetch(BASE_URL + url).then((response) => response.json());\r\n}\r\n\r\nexport const _delete = (url, body) => {\r\n    return fetch(BASE_URL + url, {\r\n        method: 'delete',\r\n        body: JSON.stringify(body)\r\n    })\r\n    .then((response) => response.json());\r\n}\r\n\r\nexport const post = (url, body) => {\r\n    return fetch(BASE_URL + url, {\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    })\r\n    .then((response) => response.json());\r\n}","import { InsertDriveFile } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport '../../styles/FileItem.css'\r\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { BASE_URL, DELETE_FILE, DOWNLOAD_FILE } from '../../constants/REST_URLS';\r\nimport { post, _delete } from '../../services/RestService';\r\n\r\n// const monthNames = \r\n\r\nconst FileItem = ({id, caption, size, onDeleted}) => {\r\n\r\n    // const fileDate = \r\n\r\n    const getReadableFileSizeString = (fileSizeInBytes) => {\r\n        let i = -1;\r\n        const byteUnits = ['kB', 'MB', 'GB', 'TB']\r\n        do {\r\n            fileSizeInBytes= fileSizeInBytes / 1024;\r\n            i++;\r\n        } while (fileSizeInBytes > 1024);\r\n        \r\n        return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\r\n    }\r\n\r\n    // const downloadFile = () => {\r\n    //     $(document).on('click', '#download', function() {  \r\n    //         window.open(`${BASE_URL}${DOWNLOAD_FILE}?name=${caption}`);    \r\n    //     });\r\n    // }\r\n\r\n    const deleteFile = () => {\r\n        post(`${DELETE_FILE}?name=${caption}`, {name:caption}).then((response) => {\r\n            alert('File deletion started')\r\n            setTimeout(() => {\r\n                onDeleted();\r\n            }, 2000);\r\n        }).catch((err) => {\r\n            console.log('File deletion failed', err)\r\n            alert('File deletion faild')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='fileItem'>\r\n            <a>\r\n                <div className='fileItem--left'>\r\n                    <InsertDriveFile />\r\n                    <p>{caption}</p>\r\n                </div>\r\n\r\n                <div className='fileItem--right'>\r\n                    {/* <p>{timestamp}</p> */}\r\n                    <p>{getReadableFileSizeString(size)}</p>\r\n                    <div>\r\n                        <a href={`${BASE_URL}${DOWNLOAD_FILE}?name=${caption}`} target='_blank' download style={{marginRight:'10px'}}>\r\n                            <DownloadIcon style={{color:'rgb(51, 103, 214)'}}/>\r\n                        </a>\r\n                        <span onClick={deleteFile}>\r\n                            <DeleteIcon style={{color:'red', cursor:'pointer'}}/>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileItem\r\n","import React, {useState, useEffect} from 'react'\r\nimport {db} from '../../firebase'\r\nimport FileItem from './FileItem'\r\nimport '../../styles/FilesView.css';\r\nimport { FileCard } from './FileCard';\r\nimport { get } from '../../services/RestService';\r\nimport { LIST_FILES } from '../../constants/REST_URLS';\r\n\r\nexport const FilesView = () => {\r\n    const [files, setFiles] = useState([])\r\n\r\n    const fetchFiles = () => {\r\n        get(LIST_FILES).then((response) => {\r\n            const keys = Object.keys(response.data);\r\n            const files = [];\r\n            keys.forEach(key => {\r\n                const eachFile = response.data[key].file;\r\n                files.push({\r\n                    id: eachFile.name,\r\n                    item: eachFile\r\n                })\r\n            });\r\n            setFiles(files)\r\n            console.log('files', files)\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchFiles();\r\n    }, [])\r\n\r\n    return (\r\n        <div className='filesView'>\r\n            {/* <div className='filesView__row'>\r\n                {\r\n                    files.slice(0,5).map(({id,item})=>(\r\n                        <FileCard name={item.caption} />\r\n                    ))\r\n                }\r\n            </div> */}\r\n\r\n            {/* <div className='filesView__titles'>\r\n                <div className='filesView__titles--left'>\r\n                    <p>Name</p>\r\n                </div>\r\n\r\n                <div className='filesView__titles--right'>\r\n                    <p>File size</p>\r\n\r\n                    <p>Action</p>\r\n                </div>\r\n            </div> */}\r\n            {\r\n                files.map(({id, item}) => (\r\n                    <FileItem id={id} caption={item.name} size={item.size} timestamp={item.timestamp} onDeleted={fetchFiles} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/google-drive-logo.6ccd3e56.svg\";","import React from 'react'\r\nimport '../../styles/header.css'\r\nimport GDriveLogo from '../../media/google-drive-logo.svg'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nconst index = () => {\r\n    return (\r\n        <div className='header'>\r\n            <div className='header__logo' >\r\n                <img src={GDriveLogo} alt=\"\" />\r\n                <span>DriveX</span>\r\n            </div>\r\n            <div className='header__searchContainer'>\r\n                <div className=\"header__searchBar\">\r\n                    <SearchIcon/>\r\n                    <input type='text' placeholder='Search in Drive'/>\r\n                    {/* <ExpandMoreIcon/> */}\r\n                </div>\r\n            </div>\r\n            <div className='header__icons' >\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default index\r\n","import { GET_SCHEMA } from \"../constants/REST_URLS\"\r\nimport { post } from \"./RestService\"\r\n\r\nexport const uploadFile = (file) => {\r\n    getSchema(file).then(schema => {\r\n        console.log('schema', schema);\r\n    }).catch(error => {\r\n        console.error(error);\r\n    })\r\n}\r\n\r\n/**\r\n * Get the schema which will have info like\r\n * parts to divide file in\r\n * and drives to upload\r\n */\r\nfunction getSchema(file) {\r\n    return post(GET_SCHEMA, {\r\n        name: file.name,\r\n        size: file.size\r\n    })\r\n}\r\n\r\nexport const getReadableFileSizeString = (fileSizeInBytes) => {\r\n    let i = -1;\r\n    const byteUnits = ['kB', 'MB', 'GB', 'TB']\r\n    do {\r\n        fileSizeInBytes= fileSizeInBytes / 1024;\r\n        i++;\r\n    } while (fileSizeInBytes > 1024);\r\n    \r\n    return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\r\n}\r\n\r\nfunction createUploadTask(schema) {\r\n    \r\n}","import React, {useState, useEffect} from 'react';\r\nimport { CREATE_UPLOAD_TASK, UPLOAD_STATUS } from '../../constants/REST_URLS';\r\nimport { get, post } from '../../services/RestService';\r\nimport './uploads.css';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { getReadableFileSizeString } from '../../services/FileService';\r\n\r\nexport const Uploads = (open) => {\r\n\r\n    const [uploadStatus, setUploadStatus] = useState([]);\r\n    const [newTaskUrl, setNewTaskUrl] = useState(null);\r\n\r\n    const fetchUpdateTasks = () => {\r\n        get(UPLOAD_STATUS).then((response) => {\r\n            const keys = Object.keys(response.data);\r\n            const statuses = [];\r\n            keys.forEach(key => {\r\n                const status = response.data[key];\r\n                statuses.push({\r\n                    id: key,\r\n                    item: status\r\n                })\r\n            });\r\n            setUploadStatus(statuses)\r\n            console.log('files', statuses)\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        var task = setInterval(() => {\r\n            fetchUpdateTasks();\r\n        }, 3000);\r\n\r\n        window.addEventListener('mousemove', () => {});\r\n\r\n        // returned function will be called on component unmount \r\n        return () => {\r\n            clearInterval(task)\r\n            window.removeEventListener('mousemove', () => {})\r\n        }\r\n        \r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        setNewTaskUrl(e.target.value)\r\n    }\r\n\r\n    const handleUploadSubmit = () => {\r\n        post(CREATE_UPLOAD_TASK, {\r\n            url: newTaskUrl\r\n        }).then((res) => {\r\n            console.log('Upload started',res);\r\n            alert('Upload started');\r\n        }).catch((err) => {\r\n            console.log('Failure to start upload',err);\r\n            alert('Failure to start upload');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"uploads\">\r\n            <div className=\"newUploadTask\">\r\n                <input type=\"text\" placeholder=\"  Enter url or magnet\" className=\"newUploadTask__input\" onChange={handleChange} />\r\n                <span className=\"newUploadTask__submit\" onClick={handleUploadSubmit}>\r\n                    <CloudUploadIcon style={{ color: 'green' }} />\r\n                    <text style={{ marginLeft: '5px' }}>Upload</text>\r\n                </span>\r\n            </div>\r\n\r\n            {/* Running upload task */} \r\n            <div className=\"upload__tasks\">\r\n                {\r\n                    uploadStatus.map(({id, item}) => (\r\n                        <div className=\"uploads__single__task\" style={{background:`linear-gradient(to right, rgb(118 232 169 / 98%) ${((item.downloaded / item.total) * 100)}%, white 0%)`}}>\r\n                            <span className=\"uploads__task__name\">{id}</span>\r\n                            <span className=\"uploads__task__progress\">{getReadableFileSizeString(item.downloaded)}/{getReadableFileSizeString(item.total)}</span>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport AddICon from '@material-ui/icons/Add'\r\nimport './../../styles/NewFile.css'\r\n\r\nimport firebase from 'firebase'\r\nimport { storage, db } from \"../../firebase\";\r\nimport { makeStyles, Modal } from '@material-ui/core';\r\nimport { get, post } from '../../services/RestService';\r\nimport { BASE_URL, UPLOAD_FILE, UPLOAD_STATUS } from '../../constants/REST_URLS';\r\nimport { uploadFile } from '../../services/FileService';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { Uploads } from '../Uploads';\r\n\r\nfunction getModalStyle() {\r\n    return {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        // border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    }\r\n}))\r\n\r\nexport const NewFile = () => {\r\n\r\n    const [uploadStatus, setUploadStatus] = useState([])\r\n\r\n    useEffect(() => {\r\n        get(UPLOAD_STATUS).then((response) => {\r\n            const keys = Object.keys(response.data);\r\n            const statuses = [];\r\n            keys.forEach(key => {\r\n                const status = response.data[key];\r\n                statuses.push({\r\n                    id: key,\r\n                    item: status\r\n                })\r\n            });\r\n            setUploadStatus(statuses)\r\n            console.log('files', statuses)\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            alert(err);\r\n        })\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n\r\n    const [modelStyle] = useState(getModalStyle);\r\n    const [open, setOpen] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            setFile(e.target.files[0])\r\n            console.log('file', e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleUpload = () => {\r\n        setUploading(true);\r\n\r\n        uploadFile(file)\r\n\r\n        // const data = new FormData();\r\n        // data.append('file', file)\r\n\r\n        // return fetch(BASE_URL + UPLOAD_FILE, {\r\n        //     method: 'post',\r\n        //     body: data\r\n        // }).then((response) => response.json()).then(response => {\r\n        //     console.log(response)\r\n        // }).catch(error => {\r\n        //     console.log(error)\r\n        // })\r\n\r\n        /*storage.ref(`files/${file.name}`).put(file).then(snapshot => {\r\n            console.log(snapshot)\r\n\r\n            storage.ref('files').child(file.name).getDownloadURL().then(url => {\r\n                db.collection('myFiles').add({\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    caption: file.name,\r\n                    fileUrl: url,\r\n                    size: snapshot._delegate.bytesTransferred\r\n                })\r\n            })\r\n        })*/\r\n    }\r\n\r\n    return (\r\n        <div className='newFile'>\r\n            <div className='newFile__container' onClick={handleOpen}>\r\n                <CloudUploadIcon  style={{color:'green'}}/>\r\n                <p>Uploads</p>\r\n            </div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div style={modelStyle} className={classes.paper}>\r\n\r\n                    <Uploads open={open}/>\r\n\r\n                   {/* <div className=\"newUploadTask\">\r\n                    <input type=\"text\" placeholder=\"  Enter url or magnet\" className=\"newUploadTask__input\" onChange={handleChange}/>\r\n                    <span className=\"newUploadTask__submit\">\r\n                        <CloudUploadIcon  style={{color:'green'}}/>\r\n                        <text style={{marginLeft:'5px'}}>Upload</text>\r\n                    </span>\r\n                   </div> */}\r\n\r\n                   {/* Show upload tasks */}\r\n\r\n\r\n\r\n                    {/* <p>Select file you want to upload!</p>\r\n\r\n                    {\r\n                        uploading ? (\r\n                            <p>Uploading</p>\r\n                        ) : (\r\n                            <>\r\n                            <input type=\"file\" onChange={handleChange} />\r\n                            <button onClick={handleUpload}>Upload</button>\r\n                            </>\r\n                        )\r\n                    } */}\r\n\r\n                </div>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { ArrowRight } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport './../../styles/sidebaritem.css'\r\n\r\nexport const SideBarItem = ({arrow, icon, label}) => {\r\n    return (\r\n        <div className='sideBarItem'>\r\n            {/* <div className='sideBarItem__arrow'>\r\n                {arrow && (<ArrowRight />)}\r\n            </div> */}\r\n\r\n            <div className='sideBarItem__main'>\r\n                {icon}\r\n                <p>{label}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { DeleteOutline, ImportantDevices, InsertDriveFile } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { NewFile } from './NewFile'\r\nimport { SideBarItem } from './SideBarItem'\r\nimport './../../styles/sidebar.css'\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\n\r\nexport const index = () => {\r\n    return (\r\n        <div className='sideBar'>\r\n            <NewFile />\r\n            <div className='sideBar__itemsContainer'>\r\n                <SideBarItem arrow icon={(<InsertDriveFile/>)} label={'Files'} />\r\n                <SideBarItem arrow icon={(<CloudIcon/>)} label={'Drives'} />\r\n                <SideBarItem arrow icon={(<DeleteOutline/>)} label={'Bin'} />\r\n                <hr/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default index\r\n","import React from 'react'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport '../../styles/DriveItem.css'\r\n\r\nconst DriveItem = ({email,capacity, usedPercentage, status}) => {\r\n    return (\r\n        <div className='driveItem' style={{background:`linear-gradient(to right, rgb(237 237 237 / 61%) ${usedPercentage}%, white 0%)`}}>\r\n            <div className='driveItem--left'>\r\n                <p>{email}</p>\r\n            </div>\r\n\r\n            <div className='driveItem--right'>\r\n                {\r\n                    status == 'connected' ? (\r\n                        <>\r\n                        <CheckCircleIcon style={{color:'green'}} />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                        <ErrorOutlineIcon />\r\n                        </>\r\n                    )\r\n                }\r\n                <div className='driveItem-capacity'>\r\n                    <p>{capacity}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DriveItem\r\n","import React, {useState, useEffect} from 'react'\r\nimport DriveItem from './DriveItem'\r\nimport '../../styles/DrivesView.css'\r\nimport { Add } from '@material-ui/icons'\r\nimport { makeStyles, Modal } from '@material-ui/core'\r\nimport { get } from '../../services/RestService'\r\nimport { ADD_DRIVE, LIST_DRIVES, SUBMIT_AUTH } from '../../constants/REST_URLS'\r\n\r\nfunction getModalStyle() {\r\n    return {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    }\r\n}))\r\n\r\nexport const DrivesView = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [drives, setDrives] = useState([]);\r\n\r\n    useEffect(() => {\r\n        get(LIST_DRIVES).then((response) => {\r\n            //const drives = response.drives;\r\n            const keys = Object.keys(response.drives);\r\n            const drives = [];\r\n            keys.forEach(key => {\r\n                const eachDrive = response.drives[key];\r\n                drives.push({\r\n                    email: eachDrive.user.emailAddress,\r\n                    capacity: eachDrive.storageQuota.usageInGB + \"/\" + eachDrive.storageQuota.totalInGB,\r\n                    usedPercentage: ((parseInt(eachDrive.storageQuota.usage, 10) / parseInt(eachDrive.storageQuota.limit, 10)) * 100)\r\n                })\r\n            });\r\n            setDrives(drives)\r\n            console.log('drives', drives)\r\n        })\r\n    }, [])\r\n\r\n    const [modelStyle] = useState(getModalStyle);\r\n\r\n    const [showAddDriveModal, setShowAddDriveModal] = useState(false)\r\n\r\n    const [authCode, setAuthCode] = useState(null)\r\n\r\n    const openAddDriveModal = () => {\r\n        get(ADD_DRIVE).then((data) => {\r\n            window.open(data.authUrl, \"_blank\")\r\n        })\r\n        setShowAddDriveModal(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShowAddDriveModal(false)\r\n    }\r\n\r\n    const submitAuthCode = () => {\r\n        console.log('auth code : ', authCode)\r\n        const authCodeUrl = `${SUBMIT_AUTH}?code=${authCode}`;\r\n        get(authCodeUrl).then((data) => {\r\n            console.log(data)\r\n            handleClose()\r\n        })\r\n    }\r\n\r\n    const handleTextChange = (e) => {\r\n        setAuthCode(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='drivesView'>\r\n            <div className='drivesView--header'>\r\n                <p style={{fontWeight:'500', fontSize:'x-large'}}>Drives</p>\r\n                <span onClick={openAddDriveModal} style={{marginLeft:'50px', color:'rgb(51, 103, 214)', fontWeight:'bold', display:'flex', cursor:'pointer'}}>\r\n                    <Add style={{color:'rgb(51, 103, 214)'}}/>\r\n                    Add</span>\r\n            </div>\r\n\r\n            {\r\n\r\n                drives.map(({email, capacity, usedPercentage}) => (\r\n                    <DriveItem key={email} email={email} capacity={capacity} usedPercentage={usedPercentage} status={'connected'} />\r\n                ))\r\n            }\r\n\r\n            <Modal\r\n                open={showAddDriveModal}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div style={modelStyle} className={classes.paper}>\r\n                    <p>Copy the code from the new tab and paste here</p>\r\n\r\n                    <input type=\"text\" value={authCode} onChange={handleTextChange} />\r\n                    <button onClick={submitAuthCode}>Submit</button>\r\n\r\n                </div>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport './App.css';\r\nimport { FilesView } from './components/FilesView/FilesView';\r\nimport Header from './components/header'\r\nimport SideBar from './components/sidebar/index'\r\nimport GDriveLogo from \"./media/google-drive-logo.svg\";\r\nimport { auth, db, provider } from \"./firebase\";\r\nimport { DrivesView } from './components/DrivesView/DrivesView';\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState()\r\n\r\n  const handleLogin=()=>{\r\n    if (!user) {\r\n      auth.signInWithPopup(provider).then((result)=>{\r\n        window.sessionStorage.setItem(\"user\", JSON.stringify(result.user));\r\n        // Create DB if doesnt exist\r\n        // db.collection(result.user.uid).onSnapshot(snapshot => {\r\n        //   console.log('user snapshot', snapshot)\r\n        // })\r\n        setUser(result.user)\r\n        console.log(result)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      {\r\n        !user ? (\r\n        <>\r\n            <Header />\r\n            <div className='app__main'>\r\n              <SideBar />\r\n              <FilesView />\r\n            </div>\r\n            <div>\r\n            <DrivesView />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className='app__login'>\r\n            <img src={GDriveLogo} alt=\"GDriveX\" />\r\n            <button onClick={handleLogin}>Log in to GDriveX</button>\r\n          </div>\r\n        )\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}